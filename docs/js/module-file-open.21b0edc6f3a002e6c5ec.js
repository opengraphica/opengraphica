/*! For license information please see module-file-open.21b0edc6f3a002e6c5ec.js.LICENSE.txt */
"use strict";(self.webpackChunkOpenGraphica=self.webpackChunkOpenGraphica||[]).push([[8658],{24786:(e,t,a)=>{a.r(t),a.d(t,{openFromFileDialog:()=>u,openFromTemporaryStorage:()=>h,insertFromFileDialog:()=>m,openFromFileList:()=>w});var i=a(8778),n=a(22053),r=a(67340),o=a(93249),l=a(23120),s=a(71045),c=a(75930),d=a(98341);async function u(e={}){if(window.isSecureContext&&window.showOpenFilePicker){const t=await window.showOpenFilePicker({types:[{description:"Images / Videos",accept:{"text/plain":[".json"],"image/*":[],"video/*":[]}}]}),a=[];let i=null;for(const e of t)"file"===e.kind&&(i||(i=e),a.push(await e.getFile()));a.length>0&&(await w(a,e),!e.insert&&i&&r.default.set("fileHandle",i))}else{let t=document.getElementById("ogr-tmp-file-input-container");t||(t=document.createElement("div"),t.id="ogr-tmp-file-input-container",t.style.position="absolute",t.style.opacity="0.01",t.style.width="1px",t.style.height="1px",t.style.overflow="hidden",document.body.appendChild(t)),t.innerHTML="";let a=!1;const i=document.createElement("input");i.type="file",i.setAttribute("accept",e.accept||".json,image/*,video/*"),i.setAttribute("aria-hidden","true"),i.multiple=!0,t.appendChild(i),await new Promise(((n,r)=>{let o=document.activeElement;const l=setInterval((()=>{o!==document.activeElement&&s()}),100);i.addEventListener("change",(async o=>{clearInterval(l),window.removeEventListener("focus",s),a=!0,t.removeChild(i);const c=o.target.files;if(c)try{await w(c,e),n()}catch(e){r(e)}else n()}));const s=()=>{clearInterval(l),setTimeout((()=>{a||n()}),500),window.removeEventListener("focus",s)};window.addEventListener("focus",s),i.click()}))}}async function h(){let e=null;try{if(e=localStorage.getItem("openGraphicaSave_0"),!e)throw new Error("File does not exist.")}catch(e){throw console.warn(e),new Error("Could load file. It may not exist.")}await w([new File([e],"quicksave.json",{type:"text/plain"})])}async function m(e={}){return u({...e,insert:!0,accept:"image/*"})}async function w(e,t={}){const u=[];let h="";for(let i=0;i<e.length;i++){const n=e[i];u.push(new Promise((async(e,i)=>{try{const r="text/plain"===n.type||n.name.match(/\.json$/)?"json":"image";h||(h=n.name.replace(d.z,""));const o=new FileReader;if("image"===r)if("image/gif"===n.type){const r=[],l=await new Promise((e=>{o.onload=async()=>{t.cancelRef&&!0===t.cancelRef.value?(i("File open canceled."),e(null)):e(o.result)},o.onerror=()=>{i('An error occurred while reading the file "'+n.name+'".'),e(null)},o.readAsArrayBuffer(n)}));if(null===l)return;const{Gif:s,GifPresenter:c}=await a.e(187).then(a.t.bind(a,16705,23)),d=s.parse(l);let u,h=!1;try{u=d.split(!0)}catch(e){h=!0,u=d.split(!1)}const m=document.createElement("canvas");h&&(m.width=d.width,m.height=d.height);const w=m.getContext("2d");if(!w)return void i('Not enough memory to parse the gif file "'+n.name+'".');h&&w.clearRect(0,0,d.width,d.height);const f=new Image;for(let[e,a]of d.frames.entries()){if(h&&(await new Promise(((t,a)=>{f.onload=()=>{t()},f.onerror=e=>{a()},f.src=c.writeToDataUrl(u[e].writeToArrayBuffer())})),w.drawImage(f,0,0),f.src=""),t.cancelRef&&!0===t.cancelRef.value)return void i("File open canceled.");const n=await new Promise(((t,a)=>{const i=new Image;i.onload=()=>{t(i)},i.onerror=e=>{a()},h?m.toBlob((e=>{e&&(i.src=URL.createObjectURL(e))}),"image/png"):i.src=URL.createObjectURL(c.writeToBlob(u[e].writeToArrayBuffer()))}));if(t.cancelRef&&!0===t.cancelRef.value)return void i("File open canceled.");r.push({image:n,duration:10*a.delayCentiSeconds})}1===r.length?e({type:"image",result:r[0].image,file:n}):r.length>0?e({type:"imageSequence",result:r,file:n}):i('No frames found in gif file "'+n.name+'".')}else if(["video/mp4","video/webp"].includes(n.type)){const a=[];let r,o=25,l=URL.createObjectURL(n),s=document.createElement("video");for(s.addEventListener("seeked",(async function(){r&&r()})),s.src=l;(s.duration===1/0||isNaN(s.duration))&&s.readyState<2;)if(await new Promise((e=>setTimeout(e,1e3))),s.currentTime=1e7*Math.random(),t.cancelRef&&!0===t.cancelRef.value)return void i("File open canceled.");let c=Math.min(5,s.duration),d=document.createElement("canvas"),u=d.getContext("2d");if(!u)return void i('Not enough memory to parse the video file "'+n.name+'".');let[h,m]=[s.videoWidth,s.videoHeight];d.width=h,d.height=m;let w=[],f=1/o,p=0;for(;p<c;){s.currentTime=p,await new Promise((e=>{r=e})),u.drawImage(s,0,0,h,m);let e=d.toDataURL();if(w.push(e),p+=f,t.cancelRef&&!0===t.cancelRef.value)return void i("File open canceled.")}for(let e of w){const n=await new Promise(((t,a)=>{const i=new Image;i.onload=()=>{t(i)},i.onerror=e=>{a()},i.src=e}));if(t.cancelRef&&!0===t.cancelRef.value)return void i("File open canceled.");a.push({image:n,duration:1e3/o})}1===a.length?e({type:"image",result:a[0].image,file:n}):a.length>0?e({type:"imageSequence",result:a,file:n}):i('No frames found in video file "'+n.name+'".')}else{const t=await new Promise(((e,t)=>{const a=new Image;a.onload=()=>{e(a)},a.onerror=()=>{t()},a.src=URL.createObjectURL(n)}));e({type:"image",result:t,file:n})}else"json"===r&&(o.onload=async()=>{t.cancelRef&&!0===t.cancelRef.value?i("File open canceled."):e({type:"json",result:o.result,file:n})},o.onerror=()=>{i('An error occurred while reading the file "'+n.name+'".')},o.readAsText(n))}catch(e){console.error(e),i("An error occurred while parsing the file."+e)}})))}let m=[];const w=[];let p=0,g=0,y=!1;const v={fileName:h},I=await Promise.allSettled(u);for(let e of I)if("fulfilled"===e.status){if(y=!0,"image"===e.value.type){const t=e.value.result;t.width>p&&(p=t.width),t.height>g&&(g=t.height),m.push(new c.D({type:"raster",name:e.value.file.name,width:t.width,height:t.height,data:{sourceImage:t,sourceImageIsObjectUrl:!0}}))}else if("imageSequence"===e.value.type){const t=e.value.result,a=t[0].image;a.width>p&&(p=a.width),a.height>g&&(g=a.height);let i=0;const n=[];for(let e of t)n.push({start:i,end:i+e.duration,image:{sourceImage:e.image,sourceImageIsObjectUrl:!0},thumbnailImageSrc:null}),i+=e.duration;m.push(new c.D({type:"rasterSequence",name:e.value.file.name,width:a.width,height:a.height,data:{currentFrame:n[0].image,sequence:n}}))}else if("json"===e.value.type){const{workingFileDefinition:t,insertLayerActions:a}=await f(JSON.parse(e.value.result));for(let e in t)"width"===e?v.width=Math.max(v.width||1,t.width||1):"height"===e?v.height=Math.max(v.height||1,t.height||1):v[e]=t[e];m=m.concat(a)}}else"rejected"===e.status&&w.push(e.reason);if(!y)throw e.length>1?new Error("None of the files selected could be loaded."):new Error(w[0]+"");{v.width||(v.width=p||1),v.height||(v.height=g||1);const e=[];t.insert?0===r.default.state.layers.length&&e.push(new l._({width:p,height:g})):e.push(new s.p(v)),n.Z.set("useCanvasViewport",n.Z.get("preferCanvasViewport")),await i.Z.dispatch("runAction",{action:new o.x("openFile","action.openFile",[...e,...m])}),t.insert||await i.Z.dispatch("free",{memorySize:1/0,databaseSize:1/0}),window.workingFileStore=await(await Promise.resolve().then(a.bind(a,67340))).default}}async function f(e){return{workingFileDefinition:{background:e.background,colorModel:e.colorModel,colorSpace:e.colorSpace,drawOriginX:e.drawOriginX,drawOriginY:e.drawOriginY,height:e.height,layerIdCounter:e.layerIdCounter,measuringUnits:e.measuringUnits,resolutionUnits:e.resolutionUnits,resolutionX:e.resolutionX,resolutionY:e.resolutionY,scaleFactor:e.scaleFactor,selectedLayerIds:e.selectedLayerIds,width:e.width},insertLayerActions:await p(e.layers)}}async function p(e){let t=[],a=[];for(let i of e){let e={blendingMode:i.blendingMode,filters:i.filters,groupId:i.groupId,height:i.height,id:i.id,name:i.name,opacity:i.opacity,transform:new DOMMatrix(i.transform),type:i.type,visible:i.visible,width:i.width};if("empty"===i.type)e={...e,type:"empty"};else if("group"===i.type)e={...e,type:"group",expanded:i.expanded,layers:[]},a=a.concat(await p(i.layers));else if("raster"===i.type){const t=i,a=new Image,n=await fetch(t.data.sourceImageSerialized||""),r=await n.blob();await new Promise((e=>{a.onload=()=>{e()},a.onerror=()=>{e()},a.src=URL.createObjectURL(r)})),e={...e,type:"raster",data:{sourceImage:a,sourceImageIsObjectUrl:!0}}}else if("rasterSequence"===i.type){const t=i,a=[];for(let e of t.data.sequence){const t=new Image,i=await fetch(e.image.sourceImageSerialized||""),n=await i.blob();await new Promise((e=>{t.onload=()=>{e()},t.onerror=()=>{e()},t.src=URL.createObjectURL(n)})),a.push({start:e.start,end:e.end,image:{sourceImage:t,sourceImageIsObjectUrl:!0},thumbnailImageSrc:null})}e={...e,type:"rasterSequence",data:{currentFrame:a[0]?.image,sequence:a}},window.parsedLayer=e}else"vector"===i.type?e={...e,type:"vector",data:i.data}:"text"===i.type&&(e={...e,type:"text",data:i.data});t.push(new c.D(e))}return t=t.concat(a),t}}}]);