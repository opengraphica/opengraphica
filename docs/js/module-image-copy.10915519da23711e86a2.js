"use strict";(self.webpackChunkOpenGraphica=self.webpackChunkOpenGraphica||[]).push([[1196],{19533:(e,a,t)=>{t.r(a),t.d(a,{copySelectedLayers:()=>u,cutSelectedLayers:()=>f,copyAllLayers:()=>g});var s=t(50361),r=t.n(s),l=t(19971),i=t(8778),n=t(67340),c=t(95452),p=t(91457),d=t(93249),o=t(9091);async function u(){l.default.set("clipboardBufferLayers",r()((0,n.getSelectedLayers)()));try{const{exportAsImage:e}=await Promise.all([t.e(4736),t.e(8341),t.e(2912)]).then(t.bind(t,13088)),a=await e({fileType:"png",layerSelection:"selected",toClipboard:!0,generateImageHash:!0});l.default.set("hasClipboardUpdateSupport",!0),l.default.set("clipboardBufferImageHash",a.generatedImageHash)}catch(e){l.default.set("clipboardBufferImageHash",null),l.default.set("clipboardBufferUpdateTimestamp",(new Date).getTime())}}async function f(){await u(),await i.Z.dispatch("runAction",{action:new d.x("cutLayers","action.cutLayers",[new o._(n.default.state.selectedLayerIds)])})}async function g(e={}){try{const{exportAsImage:e}=await Promise.all([t.e(4736),t.e(8341),t.e(2912)]).then(t.bind(t,13088)),a=await e({fileType:"png",toClipboard:!0,generateImageHash:!0});l.default.set("hasClipboardUpdateSupport",!0),l.default.set("clipboardBufferImageHash",a.generatedImageHash)}catch(e){l.default.set("clipboardBufferImageHash",null),await new Promise((e=>{setTimeout(e,1)})),c.Z.emit("app.notify",{type:"error",dangerouslyUseHTMLString:!0,message:p.Ol})}}}}]);