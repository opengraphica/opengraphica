"use strict";(self.webpackChunkOpenGraphica=self.webpackChunkOpenGraphica||[]).push([[4440],{14689:(e,t,i)=>{i.r(t),i.d(t,{default:()=>v});var n=i(84510),o=i(66252),c=i(2262),a=i(75710),s=i(91648),l=i(19971),r=i(8778),u=i(67340),h=i(95452),y=i(72435),d=i(24817),p=i(57753),A=i(3057),x=i(8043);class v extends n.default{asyncActionStack=[];currentAsyncAction=void 0;dragStartActiveSelectionPath=void 0;selectedLayerUnwatch=null;queueAsyncAction(e,t){this.asyncActionStack.push({callback:e,args:t}),this.runCurrentAsyncAction()}runCurrentAsyncAction(){null==this.currentAsyncAction&&(this.currentAsyncAction=this.asyncActionStack.shift(),this.currentAsyncAction&&this.currentAsyncAction.callback.apply(this,this.currentAsyncAction.args||[]).then((()=>{this.currentAsyncAction=void 0,this.runCurrentAsyncAction()})).catch((()=>{this.currentAsyncAction=void 0,this.runCurrentAsyncAction()})))}async onEnter(){super.onEnter(),this.queueApplyActiveSelection=this.queueApplyActiveSelection.bind(this),this.queueClearSelection=this.queueClearSelection.bind(this),this.queueUpdateSelectionCombineMode=this.queueUpdateSelectionCombineMode.bind(this),h.Z.on("editor.tool.commitCurrentAction",this.queueApplyActiveSelection),h.Z.on("editor.tool.selectAll",this.queueClearSelection),a.Bf.on("applyActiveSelection",this.queueApplyActiveSelection),a.Bf.on("clearSelection",this.queueClearSelection),a.Bf.on("updateSelectionCombineMode",this.queueUpdateSelectionCombineMode),this.selectedLayerUnwatch=(0,o.YP)([(0,c.BK)(u.default.state).selectedLayerIds],(async()=>{await(0,a.Bq)(),s.Z.set("viewDirty",!0)}),{immediate:!0}),l.default.state.tutorialFlags.selectionToolIntroduction||(0,y.Vq)().then((()=>{let e='\n                    <p class="mb-3">The selection tool allows you to select specific parts of the image to restrict what editing affects.</p>\n                ',t='\n                    <p class="mb-3"><strong class="has-text-weight-bold"><span class="bi bi-square"></span> Selection Shape</strong> - What shape is used to draw the selection.<p>\n                    <p><strong class="has-text-weight-bold"><span class="bi bi-plus-circle-dotted"></span> Selection Combine Mode</strong> - How the current selection combines with the existing selection.<p>\n                ';(0,y.Q0)({flag:"selectionToolIntroduction",title:"Selection Tool",message:{touch:e+'\n                            <p class="mb-3"><strong class="has-text-weight-bold"><span class="bi bi-bounding-box"></span> Create Selection</strong> - Draw with one finger to create a selection.</p>\n                        '+t,mouse:e+'\n                            <p class="mb-3"><strong class="has-text-weight-bold"><span class="bi bi-bounding-box"></span> Create Selection</strong> - Click and drag with <em>Left Click</em> to create a selection.</p>\n                        '+t}})}))}onLeave(){super.onLeave(),h.Z.off("editor.tool.commitCurrentAction",this.queueApplyActiveSelection),h.Z.off("editor.tool.selectAll",this.queueClearSelection),a.Bf.off("applyActiveSelection",this.queueApplyActiveSelection),a.Bf.off("clearSelection",this.queueClearSelection),a.Bf.off("updateSelectionCombineMode",this.queueUpdateSelectionCombineMode),this.selectedLayerUnwatch&&this.selectedLayerUnwatch(),(0,a.Bi)(),s.Z.set("viewDirty",!0),l.default.state.tutorialFlags.selectionToolIntroduction||(0,y.Qs)("selectionToolIntroduction")}onMultiTouchDown(){super.onMultiTouchDown(),this.touches.length}onMultiTouchUp(){super.onMultiTouchUp()}onMultiTouchTap(e){super.onMultiTouchTap(e),1===e.length&&this.canAddPoint()&&this.addPoint()}onPointerMove(e){super.onPointerMove(e);const t=this.pointers.filter((t=>t.id===e.pointerId))[0];if(t&&("touch"!==t.type||1===this.multiTouchDownCount)&&t.isDragging&&e.isPrimary&&0===t.down.button){this.dragStartActiveSelectionPath||(this.dragStartActiveSelectionPath=[],a.iU.value.length>0&&this.queueAsyncAction((e=>this.applyActiveSelection(e,{doNotClearActiveSelection:!0})),[[...a.iU.value]])),a.wN.value=!0;const i=t.down.pageX,n=t.down.pageY,o=e.pageX,c=e.pageY,l=s.Z.get("transform"),r=s.Z.get("decomposedTransform"),u=l.inverse();if(["rectangle","ellipse"].includes(a.s8.value)){const e=Math.min(i,o),t=Math.max(i,o),s=Math.min(n,c),l=Math.max(n,c),h=new DOMPoint(e*devicePixelRatio,s*devicePixelRatio).matrixTransform(u),y=new DOMPoint(t*devicePixelRatio,s*devicePixelRatio).matrixTransform(u),d=new DOMPoint(e*devicePixelRatio,l*devicePixelRatio).matrixTransform(u),p=new DOMPoint(t*devicePixelRatio,l*devicePixelRatio).matrixTransform(u);if(Math.round(r.rotation*Math.RADIANS_TO_DEGREES)%90==0&&(h.x=Math.round(h.x),h.y=Math.round(h.y),y.x=Math.round(y.x),y.y=Math.round(y.y),d.x=Math.round(d.x),d.y=Math.round(d.y),p.x=Math.round(p.x),p.y=Math.round(p.y)),"rectangle"===a.s8.value)a.iU.value=[{type:"move",x:h.x,y:h.y},{type:"line",x:y.x,y:y.y},{type:"line",x:p.x,y:p.y},{type:"line",x:d.x,y:d.y},{type:"line",x:h.x,y:h.y}];else{const e=.552284749831,t=h.x+(y.x-h.x)/2,i=h.y+(y.y-h.y)/2,n=t+(y.x-t)*e,o=i+(y.y-i)*e,c=t+(h.x-t)*e,s=i+(h.y-i)*e,l=d.x+(p.x-d.x)/2,r=d.y+(p.y-d.y)/2,u=l+(d.x-l)*e,A=r+(d.y-r)*e,x=l+(p.x-l)*e,v=r+(p.y-r)*e,S=h.x+(d.x-h.x)/2,g=h.y+(d.y-h.y)/2,m=S+(h.x-S)*e,f=g+(h.y-g)*e,w=S+(d.x-S)*e,b=g+(d.y-g)*e,M=y.x+(p.x-y.x)/2,C=y.y+(p.y-y.y)/2,q=M+(y.x-M)*e,P=C+(y.y-C)*e,T=M+(p.x-M)*e,U=C+(p.y-C)*e;a.iU.value=[{type:"move",x:t,y:i},{type:"quadraticBezierCurve",x:M,y:C,shx:n,shy:o,ehx:q,ehy:P},{type:"quadraticBezierCurve",x:l,y:r,shx:T,shy:U,ehx:x,ehy:v},{type:"quadraticBezierCurve",x:S,y:g,shx:u,shy:A,ehx:w,ehy:b},{type:"quadraticBezierCurve",x:t,y:i,shx:m,shy:f,ehx:c,ehy:s}]}}}}async onPointerUpBeforePurge(e){super.onPointerUpBeforePurge(e);const t=this.pointers.filter((t=>t.id===e.pointerId))[0];t&&0===t.down.button&&(t.isDragging?(a.wN.value=!1,this.queueAsyncAction(((e,t)=>this.updateActiveSelection(e,t)),[a.iU.value,this.dragStartActiveSelectionPath]),this.dragStartActiveSelectionPath=void 0):e.isPrimary&&["mouse","pen"].includes(e.pointerType)&&0===e.button&&this.canAddPoint()&&this.addPoint())}addPoint(){}canAddPoint(){return"free"===a.s8.value}async applyActiveSelection(e=a.iU.value,t){await r.Z.dispatch("runAction",{action:new d.s(e,t)})}async queueApplyActiveSelection(){this.queueAsyncAction((e=>this.applyActiveSelection(e)),[[...a.iU.value]])}async updateActiveSelection(e,t){await r.Z.dispatch("runAction",{action:new A.w(e,t)})}async clearSelection(){await r.Z.dispatch("runAction",{action:new p.m})}async queueClearSelection(){this.queueAsyncAction((()=>this.clearSelection()))}async queueUpdateSelectionCombineMode(e){this.queueAsyncAction((async()=>{await r.Z.dispatch("runAction",{action:new x.U(e,a.B3.value),mergeWithHistory:["applyActiveSelection"]})}))}}}}]);