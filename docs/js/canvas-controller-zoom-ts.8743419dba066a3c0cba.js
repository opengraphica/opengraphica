"use strict";(self.webpackChunkOpenGraphica=self.webpackChunkOpenGraphica||[]).push([[6280],{22718:(o,t,n)=>{n.r(t),n.d(t,{default:()=>u});var e=n(66252),s=n(10177),i=n(84510),a=n(72435),r=n(91648),l=n(19971);const h=window.devicePixelRatio||1;class u extends i.default{ctrlKeyUnwatch=null;isDragging=!1;onEnter(){super.onEnter(),this.ctrlKeyUnwatch=(0,e.YP)([s.vc],(([o])=>{this.handleCursorIcon()})),l.default.state.tutorialFlags.zoomToolIntroduction||(0,a.Vq)().then((()=>{let o='\n                    <p class="mb-3">This tool lets you zoom in to the image, and move the view around.</p>\n                ';(0,a.Q0)({flag:"zoomToolIntroduction",title:"Zoom/Pan Tool",message:{touch:o+'\n                            <p class="mb-3"><strong class="has-text-weight-bold"><span class="bi bi-zoom-in"></span> Zooming</strong> - Tap with one finger to zoom in. Tap with two fingers to zoom out.</p>\n                            <p><strong class="has-text-weight-bold"><span class="bi bi-arrows-move"></span> Panning</strong> - Tap and drag with one finger to move the canvas.</p>\n                        ',mouse:o+'\n                            <p class="mb-3"><strong class="has-text-weight-bold"><span class="bi bi-zoom-in"></span> Zooming</strong> - <em>Left Click</em> to zoom in; <em>Ctrl + Left Click</em> to zoom out.</p>\n                            <p><strong class="has-text-weight-bold"><span class="bi bi-arrows-move"></span> Panning</strong> - Click and drag with the <em>Left Mouse Button</em> to move the canvas.</p>\n                        '}})}))}onLeave(){super.onLeave(),this.ctrlKeyUnwatch&&(this.ctrlKeyUnwatch(),this.ctrlKeyUnwatch=null),l.default.state.tutorialFlags.zoomToolIntroduction||(0,a.Qs)("zoomToolIntroduction")}onMultiTouchTap(o){super.onMultiTouchTap(o),1===o.length?this.onZoomIn():2===o.length&&this.onZoomOut()}onPointerMove(o){super.onPointerMove(o);const t=this.pointers.filter((t=>t.id===o.pointerId))[0];if(t&&("touch"!==t.type||1===this.multiTouchDownCount)&&t.isDragging&&o.isPrimary&&0===t.down.button){this.isDragging=!0,this.handleCursorIcon();const n=(t.movePrev||t.down).pageX,e=(t.movePrev||t.down).pageY,s=o.pageX,i=o.pageY;let a=r.Z.get("transform");const l=a.inverse(),u=new DOMPoint(n*h,e*h).matrixTransform(l),c=new DOMPoint(s*h,i*h).matrixTransform(l);a.translateSelf(c.x-u.x,c.y-u.y),r.Z.set("transform",a),r.Z.set("viewDirty",!0)}}onPointerUpBeforePurge(o){super.onPointerUpBeforePurge(o);const t=this.pointers.filter((t=>t.id===o.pointerId))[0];t&&0===t.down.button&&(t.isDragging?(this.isDragging=!1,this.handleCursorIcon()):o.isPrimary&&["mouse","pen"].includes(o.pointerType)&&0===o.button&&(!0===s.vc.value?this.onZoomOut():this.onZoomIn()))}onZoomIn(){this.zoomCanvas(3)}onZoomOut(){this.zoomCanvas(-3)}handleCursorIcon(){let o=super.handleCursorIcon();return o||(o=this.isDragging?"grabbing":s.vc.value?"zoom-out":"zoom-in"),r.Z.set("cursor",o),o}}}}]);